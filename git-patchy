#!/usr/bin/env python

import os
import sys
from argparse import ArgumentParser
from pathlib import Path

from src.patchouli import Patchouli
from src.config import Config

class Runner:
    config: Config

    def __init__(self):
        self.parser = ArgumentParser(description="Patchouli Plugin Manager", usage='''git patchy [help|show]
    Note:You can add "help" after most subcommands to get more detailed help.

    help
        Prints help

    list-envs
        List all valid environments in the configured base path.

    show
        Prints plugin information and various metadata about them.
        Currently prints plugin name, jar path, folder path if exists, and config file list if exists
''')
        self.parser.add_argument("command", help="Subcommand to run: 'git patchy [help|show]'")

        if len(sys.argv)==1:
            self.parser.print_help(sys.stderr)
            sys.exit(1)

        self.args = self.parser.parse_args(sys.argv[1:2])

        self.config = Config()

        subcommand = self.args.command.replace("-", "_")
        if not hasattr(self, subcommand):
            print('Unrecognized subcommand')
            self.parser.print_help()
            sys.exit(1)

        getattr(self, subcommand)()

    def list_envs(self):
        print("Valid envs:")
        for path in Path(self.config.base_path).iterdir():
            if path.is_dir():
                print(f"- {path.name}")

    def help(self):
        self.parser.print_help()

    def show(self):
        parser = ArgumentParser(description="Shows plugin information", usage='''git patchy show [--env=prod]
''')
        parser.add_argument('--env', default=None, help="Changes what environment we target.")
        args = parser.parse_args(sys.argv[2:])

        patchy = Patchouli(config=self.config, target_env=args.env)
        patchy.run()

if __name__ == "__main__":
    runner = Runner()
